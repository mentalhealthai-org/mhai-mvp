[tool.poetry]
name = "loveai-mvp"
version = "0.1.0" #semantic-release
description = "LoveAI MVP is a prototype in Python that will showcase the functionality for the future app"
readme = "README.md"
authors = ["Ivan Ogasawara <ivan.ogasawara@gmail.com>"]
packages = [
  {include = "loveai_mvp", from="src"},
]
license = "Other"
exclude = [
  ".git/*",
  ".env*",
]
include = ["src/loveai_mvp/py.typed"]

[tool.poetry.scripts]
"loveai-mvp" = "loveai_mvp.__main__:app"

[tool.poetry.dependencies]
python = ">=3.10,<4"
openai = "^1.30.1"
speechrecognition = "^3.10.4"
gtts = "^2.5.1"
pydub = "^0.25.1"
pygame = "^2.5.2"
pyaudio = "^0.2.14"
edge-tts = "^6.1.11"
pygame-emojis = "^0.1.1"
transformers = "^4.41.0"
torch = {version = "^2.3.0+cpu", source = "pytorch-cpu-src"}
torchvision = {version = "^0.18.0+cpu", source = "pytorch-cpu-src"}
torchaudio = {version = "^2.3.0+cpu", source = "pytorch-cpu-src"}

[tool.poetry.group.dev.dependencies]
pytest = ">=7.3.2"
pytest-cov = ">=4.1.0"
coverage = ">=7.2.7"
pre-commit = ">=3.3.2"
ruff = ">=0.2.0"
mypy = ">=1.5.0"
bandit = ">=1.7.5"
vulture = ">=2.7"
mccabe = ">=0.6.1"
# if you want to use docker-compose from your system, remove compose-go here
compose-go = ">=2.18.1"
ipython = "<8"
ipykernel = ">=6.0.0"
Jinja2 = ">=3.1.2"
mkdocs = ">=1.4.3"
mkdocs-exclude = ">=1.0.2"
mkdocs-jupyter = ">=0.24.1"
mkdocs-literate-nav = ">=0.6.0"
mkdocs-macros-plugin = ">=0.7.0,<1"
mkdocs-material = ">=9.1.15"
mkdocstrings = ">=0.21.2"
mkdocstrings-python = ">=1.1.2"
makim = "1.15.1"
# 'PosixPath' object has no attribute 'endswith'
virtualenv = "<=20.25.1"


[[tool.poetry.source]]
name = "pytorch-cpu-src"
url = "https://download.pytorch.org/whl/cpu"
priority = "explicit"

[tool.pytest.ini_options]
testpaths = [
    "tests",
]

[tool.bandit]
exclude_dirs = ["tests"]
targets = "./"

[tool.vulture]
exclude = ["tests"]
ignore_decorators = []
ignore_names = []
make_whitelist = true
min_confidence = 80
paths = ["./"]
sort_by_size = true
verbose = false

[tool.ruff]
line-length = 79
force-exclude = true
src = ["./"]
exclude = [
  'docs',
]

[tool.ruff.lint]
select = [
  "E",   # pycodestyle
  "F",   # pyflakes
  "D",   # pydocstyle
  "YTT", # flake8-2020
  "RUF", # Ruff-specific rules
  "I001",  # isort
]
fixable = ["I001"]

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.ruff.lint.isort]
# Use a single line between direct and from import
lines-between-types = 1

[tool.mypy]
python_version = "3.8"
check_untyped_defs = true
strict = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
